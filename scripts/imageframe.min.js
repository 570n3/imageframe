(function(A) {
    var B = {
        draw: function(C, D) {
            B['render'](C, D);
            D['Window']['resize'](function() {
                B['render'](C, D)
            });
            setTimeout(function() {
                B['render'](C, D)
            }, 200)
        },
        render: function(C, D) {
            clearInterval(D['swapInterval']);
            var E = D['HeaderContainer']['width'](),
                F = B['getColumns'](E);
            D['HeaderContent']['css']('height', '');
            var G = D['ImageFrame']['find']('div.img')['removeAttr']('style');
            for (var H = 0; H < G['length']; H++) {
                A(G[H])['attr']('data-index', H)
            };
            var I = (E / F),
                J = D['HeaderContent']['outerHeight']();
            G['css']({
                width: I,
                height: I
            });
            if (J % I != 0) {
                J = Math['ceil'](J / I) * I;
                D['HeaderContent']['css']({
                    'height': J,
                    'margin': I,
                    'box-sizing': 'border-box'
                });
                D['HeaderContainer']['css']({
                    height: (J + (I * 2))
                })
            };
            var K = bottomImages = F,
                L = rightImages = (J / I),
                M = K + bottomImages + L + rightImages,
                N = D['HeaderContent']['outerHeight']() + I,
                O = D['HeaderContent']['outerWidth']() + I;
            var A0 = 0;
            for (var H = 0; H < K; H++) {
                G['eq'](H)['css']({
                    left: (I * H),
                    top: 0
                })['show']()
            };
            A0 = K;
            for (var H = 0; H < rightImages; H++) {
                G['eq'](H + A0)['css']({
                    left: O,
                    top: (I * (H + 1))
                })['show']()
            };
            A0 = (K + rightImages);
            for (var H = 0; H < bottomImages; H++) {
                G['eq'](H + A0)['css']({
                    left: (I * (bottomImages - (H + 1))),
                    top: N
                })['show']()
            };
            A0 = (K + rightImages + bottomImages);
            for (var H = 0; H < L; H++) {
                G['eq'](H + A0)['css']({
                    left: 0,
                    top: (I * (L - H))
                })['show']()
            };
            B['swap'](C, D)
        },
        swap: function(C, D) {
            var G = D['ImageFrame']['find']('div.img:visible'),
                A1, A2, A3, A4, A5, A6, A7, A8, A9 = false;
            D['swapInterval'] = setInterval(function() {
                if (!A9) {
                    A9 = true;
                    A1 = B.RandomNumber(0, (G['length'] - 1)),
                    A3 = G['filter']('[data-index=' + A1 + ']'),
                    A5 = A3['find']('img')['clone'](),
                    A2 = B.RandomNumber(0, 1),
                    c = B.RandomNumber(0, 1);
                    A2 = (A1 == 0 ? (c == 0 ? (G['length'] - 1) : 1) : (A1 == (G['length'] - 1) ? (c == 0 ? (1 - G['length']) : -1) : (A2 == 0 ? -1 : 1)));
                    A4 = G['filter']('[data-index=' + (A1 + A2) + ']'),
                    A6 = A4['find']('img')['clone']();
                    A7 = A3['position']();
                    A8 = A4['position']();
                    A3['animate']({
                        top: A8['top'],
                        left: A8['left']
                    }, C['duration'], function() {
                        A3['attr']('data-index', (A1 + A2))
                    });
                    A4['animate']({
                        top: A7['top'],
                        left: A7['left']
                    }, C['duration'], function() {
                        A4['attr']('data-index', A1);
                        A9 = false
                    })
                }
            }, C['interval'])
        },
        getColumns: function(E) {
            var F = 9;
            if (E >= 1050) {
                F = 10
            } else {
                if (E >= 850) {
                    F = 9
                } else {
                    if (E >= 650) {
                        F = 8
                    } else {
                        if (E >= 450) {
                            F = 7
                        } else {
                            if (E >= 300) {
                                F = 9
                            }
                        }
                    }
                }
            };
            return F
        },
        RandomNumber: function(Aa, Ab) {
            return Math['floor'](Math['random']() * (Ab - Aa + 1)) + Aa
        }
    };
    A['fn']['extend']({
        imageframe: function(Ac) {
            var Ad = '<style type=\'text/css\'>' + '.imageframe-container { background-color: #000; padding: 1px; margin: -1px; }' + '.imageframe { position: relative; }' + '.imageframe div.img { display: none; padding: 0; margin: 0; position: absolute; z-index: 999999; }' + '.imageframe div.img img { display: block; width: 100%; height: 100%; }' + '</style>';
            A('head')['append'](Ad);
            var C = {
                interval: 2000,
                duration: 600
            };
            var D;
            this['each'](function(A1, Ae) {
                A['extend'](C, Ac);
                var Af = A('<div class="imageframe"></div>');
                for (var H = 1; H <= 54; H++) {
                    Af['append']('<div class="img"><img src="images/grid/' + H + '.jpg" alt=""></li</div>')
                };
                A(Ae)['wrap']('<div class="imageframe-container"></div>')['before'](Af);
                D = {
                    Window: A(window),
                    ImageFrame: Af,
                    swapInterval: null
                };
                A['extend'](D, {
                    HeaderContainer: D['ImageFrame']['parent'](),
                    HeaderContent: A(Ae)
                });
                B['draw'](C, D)
            });
            return {
                start: function() {
                    B['swap'](C, D)
                },
                stop: function() {
                    clearInterval(D['swapInterval'])
                }
            }
        }
    })
})(jQuery)